{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs24 \cf0 ADB 1.3\
\
Implementation of separate audio and video transmitters and receivers. ADB has much better video compression and can operate in multi or unicast mode. Audio is still not well integrated with video due to some foibles with the Jitter codebase.\
\
Audio: A more elegant (better UI) UNCOMPRESSED IP audio send-receive functions using the jit.catch/jit.net.send and jit.net.receive/jit release functions. this code is modified from Zach Poff who seems to have a better handle on how to handle some UI functions but the core code is functionally the same as ADA for audio transmission (i.e. codec'less and cheesy). This has limited functionality and needs better compression and buffering. It was built for testing other types of encoding mechanisms available in the jitter matrix. Note the audio buffer code is present in the patch and needs to be linked to the latency output of the jit.net.send function on the audio led.\
\
Video: A different approach to video using the jit.net.broadcast RSTP server (note that this system uses a write function to generate an .sdp file which tells the recipient how to find the broadcast stream). The reason this code is used is because the onboard quicktime compressors can be used during image grabbing from the camera. The audio function is unreliable (sounds like a bug pending revision by MaxMSP) and thus I have used the same type of separate audio code.\
}